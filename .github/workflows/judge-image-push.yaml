name: Publish Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Metadata
        id: meta-base
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/${{ github.repository_owner }}/basejudge
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Normal image
        uses: docker/build-push-action@v6
        with:
          file: src/judge/Dockerfile.newbase
          context: src/judge/
          target: prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta-base.outputs.tags }}

      - name: Generate Metadata
        id: meta-judge
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/${{ github.repository_owner }}/judge
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Test version
        run: echo {{ steps.meta-base.outputs.version }}

      - name: Normal image
        uses: docker/build-push-action@v6
        with:
          file: src/judge/Dockerfile.monolith
          context: src/judge/
          build-args: |
            BASEJUDGE={{ steps.meta-judge.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta-base.outputs.tags }}